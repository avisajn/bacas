{"version":3,"sources":["../../../src/hfoy/controller/baserest.js"],"names":["__before","allow","allowAccessOrigin","http","headers","origin","isAllow","think","env","i","len","length","indexOf","header","method","toLowerCase","end","fail","token","cookie","decryptedData","id","username","Date","getTime","time","_userInfo","getUser","getUserId","__call","locale","action","url","controller","rest"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;AAEE;;;mBAGMA,Q;;;;;;;;AACEC,mB,GAAQ,CAAC,QAAD,EAAW,WAAX,EAAwB,gBAAxB,C;AAEVC,+B,GAAoB,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,M;AACtCC,qB,GAAU,K;;AACd,kBAAGC,MAAMC,GAAN,IAAa,aAAhB,EAA+BF,UAAU,IAAV;;AAEvBG,e,GAAE,C,EAAEC,G,GAAIT,MAAMU,M;;;oBAAOF,IAAEC,G;;;;;mBACxBJ,O;;;;;;;;AACH,kBAAGJ,qBAAqBA,kBAAkBU,OAAlB,CAA0BX,MAAMQ,CAAN,CAA1B,KAAuC,CAA/D,EAAkEH,UAAU,IAAV;;;AAFnCG,iB;;;;;;AAKnC,kBAAGH,OAAH,EAAW;AACP,qBAAKO,MAAL,CAAY,6BAAZ,EAA2CX,iBAA3C;AACH,eAFD,MAEK;AACD,qBAAKW,MAAL,CAAY,6BAAZ,EAA2C,kBAA3C;AACH;AACD,mBAAKA,MAAL,CAAY,8BAAZ,EAA4C,qEAA5C;AACA,mBAAKA,MAAL,CAAY,8BAAZ,EAA4C,iCAA5C;AACA,mBAAKA,MAAL,CAAY,kCAAZ,EAAgD,MAAhD;;oBACG,KAAKV,IAAL,CAAUW,MAAV,CAAiBC,WAAjB,OAAmC,S;;;;;AACpC,mBAAKC,GAAL;+CACO,KAAKC,IAAL,CAAU,CAAC,CAAX,C;;;AAGLC,mB,GAAQ,KAAKC,MAAL,CAAY,OAAZ,C;;oBACT,CAACD,KAAD,IAAUA,SAAS,G;;;;;+CACb,KAAKD,IAAL,CAAU,CAAC,EAAX,C;;;AAEHG,2B,GAAgB,uBAAYF,KAAZ,C;;oBACnB,CAACE,aAAD,IAAkB,CAACA,cAAcC,EAAjC,IAAuC,CAACD,cAAcE,Q;;;;;+CAChD,KAAKL,IAAL,CAAU,CAAC,EAAX,C;;;oBAEN,IAAIM,IAAJ,GAAWC,OAAX,MAAwBJ,cAAcK,I;;;;;+CAChC,KAAKR,IAAL,CAAU,CAAC,EAAX,C;;;AAELS,uB,GAAYN,a;;;AAEhB,mBAAKO,OAAL,GAAe,YAAU;AACvB,uBAAOD,SAAP;AACD,eAFD;;AAIA,mBAAKE,SAAL,GAAiB,YAAU;AACvB,uBAAOF,UAAUL,EAAjB;AACH,eAFD;;;;;;;;;;;;;;;;;mBAMFQ,M,qBAAQ;AACN,WAAO,KAAKZ,IAAL,CAAUV,MAAMuB,MAAN,CAAa,gBAAb,EAA+B,KAAK3B,IAAL,CAAU4B,MAAzC,EAAiD,KAAK5B,IAAL,CAAU6B,GAA3D,CAAV,CAAP;AACD,G;;;EAtD0BzB,MAAM0B,UAAN,CAAiBC,I","file":"baserest.js","sourcesContent":["'use strict';\n\nimport {decryptCode} from '../../util.js';\nexport default class extends think.controller.rest {\n  /**\n   * some base method in here\n   */\n  async __before() {\n    const allow = ['hatech' ,'localhost' ,'hadoopfinetech'];\n\n    let allowAccessOrigin = this.http.headers.origin;\n    let isAllow = false;\n    if(think.env == 'development') isAllow = true;\n\n    for(let i=0,len=allow.length;i<len;i++){\n        if(isAllow) break;\n        if(allowAccessOrigin && allowAccessOrigin.indexOf(allow[i]) >= 0) isAllow = true;\n    }\n\n    if(isAllow){\n        this.header('Access-Control-Allow-Origin', allowAccessOrigin);\n    }else{\n        this.header('Access-Control-Allow-Origin', 'ywordle.ymark.cc');\n    }\n    this.header('Access-Control-Allow-Headers', 'Content-Type,Content-Length, Authorization, Accept,X-Requested-With');\n    this.header('Access-Control-Allow-Methods', \"GET, POST, PUT, DELETE, OPTIONS\");\n    this.header('Access-Control-Allow-Credentials', 'true');\n    if(this.http.method.toLowerCase() === \"options\"){\n      this.end();\n      return this.fail(-1);\n    }\n\n    let token = this.cookie(\"token\");\n    if(!token || token == '0'){\n      return this.fail(-99);\n    }\n    const decryptedData = decryptCode(token);\n    if(!decryptedData || !decryptedData.id || !decryptedData.username){\n      return this.fail(-99);\n    }\n    if(new Date().getTime() >= decryptedData.time){\n      return this.fail(-98);\n    }\n    let _userInfo = decryptedData;\n\n    this.getUser = function(){\n      return _userInfo;\n    }\n\n    this.getUserId = function(){\n        return _userInfo.id;\n    }\n\n  }\n\n  __call(){\n    return this.fail(think.locale(\"ACTION_INVALID\", this.http.action, this.http.url));\n  }\n}"]}