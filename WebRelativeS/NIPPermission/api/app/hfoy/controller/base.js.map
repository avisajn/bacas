{"version":3,"sources":["../../../src/hfoy/controller/base.js"],"names":["__before","allow","allowAccessOrigin","http","headers","origin","isAllow","think","env","i","len","length","indexOf","header","method","end","url","ciphertext","cookie","fail","decryptedData","id","username","Date","getTime","time","_userInfo","getUser","getRids","roleids","getUserId","controller","base"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;AAGE;;;mBAGMA,Q;;;;;;;;;;AAEEC,mB,GAAQ,CAAC,QAAD,EAAW,WAAX,EAAwB,gBAAxB,C;AAEVC,+B,GAAoB,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,M;AACtCC,qB,GAAU,K;;AACd,kBAAGC,MAAMC,GAAN,IAAa,aAAhB,EAA+BF,UAAU,IAAV;;AAEvBG,e,GAAE,C,EAAEC,G,GAAIT,MAAMU,M;;;oBAAOF,IAAEC,G;;;;;mBACxBJ,O;;;;;;;;AACH,kBAAGJ,qBAAqBA,kBAAkBU,OAAlB,CAA0BX,MAAMQ,CAAN,CAA1B,KAAuC,CAA/D,EAAkEH,UAAU,IAAV;;;AAFnCG,iB;;;;;;AAKnC,kBAAGH,OAAH,EAAW;AACP,qBAAKO,MAAL,CAAY,6BAAZ,EAA2CX,iBAA3C;AACH,eAFD,MAEK;AACD,qBAAKW,MAAL,CAAY,6BAAZ,EAA2C,kBAA3C;AACH;;AAED,mBAAKA,MAAL,CAAY,8BAAZ,EAA4C,qEAA5C;AACA,mBAAKA,MAAL,CAAY,8BAAZ,EAA4C,iCAA5C;AACA,mBAAKA,MAAL,CAAY,kCAAZ,EAAgD,MAAhD;;oBACG,KAAKV,IAAL,CAAUW,MAAV,IAAoB,S;;;;;AACrB,mBAAKC,GAAL;;;;oBAGC,KAAKZ,IAAL,CAAUa,GAAV,IAAiB,c;;;;;;AAClB,oBAAIC,aAAa,OAAKC,MAAL,CAAY,OAAZ,CAAjB;AACA,oBAAG,CAACD,UAAD,IAAeA,cAAc,GAAhC,EAAoC;AAClC;AAAA,uBAAO,OAAKE,IAAL,CAAU,CAAC,EAAX;AAAP;AACD;;AAED,oBAAMC,gBAAgB,uBAAYH,UAAZ,CAAtB;AACA,oBAAG,CAACG,aAAD,IAAkB,CAACA,cAAcC,EAAjC,IAAuC,CAACD,cAAcE,QAAzD,EAAkE;AAChE;AAAA,uBAAO,OAAKH,IAAL,CAAU,CAAC,EAAX;AAAP;AACD;AACD,oBAAG,IAAII,IAAJ,GAAWC,OAAX,MAAwBJ,cAAcK,IAAzC,EAA8C;AAC5C;AAAA,uBAAO,OAAKN,IAAL,CAAU,CAAC,EAAX;AAAP;AACD;AACD,oBAAIO,YAAYN,aAAhB;AACA,uBAAKO,OAAL,GAAe,YAAU;AACvB,yBAAOD,SAAP;AACD,iBAFD;;AAIA,uBAAKE,OAAL,GAAe,YAAU;AACvB,yBAAOF,UAAUG,OAAjB;AACD,iBAFD;;AAIA,uBAAKC,SAAL,GAAiB,YAAU;AACvB,yBAAOJ,UAAUL,EAAjB;AACH,iBAFD;;;;;;;;;;;;;;;;;;;;;;;;;;EApDuBd,MAAMwB,UAAN,CAAiBC,I","file":"base.js","sourcesContent":["'use strict';\n\nimport {decryptCode} from '../../util.js';\n\nexport default class extends think.controller.base {\n  /**\n   * some base method in here\n   */\n  async __before() {\n\n    const allow = ['hatech' ,'localhost' ,'hadoopfinetech'];\n\n    let allowAccessOrigin = this.http.headers.origin;\n    let isAllow = false;\n    if(think.env == 'development') isAllow = true;\n\n    for(let i=0,len=allow.length;i<len;i++){\n        if(isAllow) break;\n        if(allowAccessOrigin && allowAccessOrigin.indexOf(allow[i]) >= 0) isAllow = true;\n    }\n\n    if(isAllow){\n        this.header('Access-Control-Allow-Origin', allowAccessOrigin);\n    }else{\n        this.header('Access-Control-Allow-Origin', 'ywordle.ymark.cc');\n    }\n\n    this.header('Access-Control-Allow-Headers', 'Content-Type,Content-Length, Authorization, Accept,X-Requested-With');\n    this.header('Access-Control-Allow-Methods', \"GET, POST, PUT, DELETE, OPTIONS\");\n    this.header('Access-Control-Allow-Credentials', 'true');\n    if(this.http.method == \"OPTIONS\"){\n      this.end();\n      return;\n    }\n    if(this.http.url != '/hfoy/login/'){\n      let ciphertext = this.cookie(\"token\");\n      if(!ciphertext || ciphertext == '0'){\n        return this.fail(-99);\n      }\n\n      const decryptedData = decryptCode(ciphertext);\n      if(!decryptedData || !decryptedData.id || !decryptedData.username){\n        return this.fail(-99);\n      }\n      if(new Date().getTime() >= decryptedData.time){\n        return this.fail(-98);\n      }\n      let _userInfo = decryptedData;\n      this.getUser = function(){\n        return _userInfo;\n      }\n\n      this.getRids = function(){\n        return _userInfo.roleids;\n      }\n\n      this.getUserId = function(){\n          return _userInfo.id;\n      }\n    }\n  }\n}"]}