{"version":3,"sources":["../../../src/api/controller/rolesys.js"],"names":["UID","require","DateFormat","db","dbpermission","getAction","setrolesysAction","http","method","param","post","data","roleid","fail","addList","removeList","sysid","length","map","k","push","sysinfoid","model","addMany","execute","delete","where","join","success"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;AACA;;;;;;AAHA,IAAIA,MAAMC,QAAQ,WAAR,CAAV;AACA,IAAIC,aAAaD,QAAQ,YAAR,CAAjB;;AAGA,IAAME,KAAK,aAAGC,YAAd;;;;;;;;;;qBAGUC,S;;;;;;;;;;;;;;;;;;;;AAIN;;;qBACMC,gB;;;;;;;;kCACC,KAAKC,IAAL,CAAUC,MAAV,IAAoB,M;;;;;8DAAe,E;;;AACtC;AACIC,iC,GAAQ,KAAKC,IAAL,E;;kCACT,CAACD,MAAME,IAAP,IAAe,CAACF,MAAMG,M;;;;;8DACd,KAAKC,IAAL,CAAU,CAAC,CAAX,EAAa,MAAb,C;;;AAEPC,mC,GAAU,E;AACVC,sC,GAAa,E;AACbJ,gC,GAAOF,MAAME,I;AACbC,kC,GAASH,MAAMG,M;;mDACXI,K;AACJ,oCAAGL,KAAKK,KAAL,EAAYC,MAAZ,GAAqB,CAAxB,EAA0B;AACtBN,yCAAKK,KAAL,EAAYE,GAAZ,CAAgB,UAACC,CAAD,EAAO;AACnBL,gDAAQM,IAAR,CAAa,EAACR,QAAOA,MAAR,EAAgBI,OAAMA,KAAtB,EAA6BK,WAAUF,CAAvC,EAAb;AACH,qCAFD;AAGH,iCAJD,MAIK;AACDJ,+CAAWK,IAAX,CAAgBJ,KAAhB;AACH;;;AAPL,iCAAQA,KAAR,IAAiBL,IAAjB,EAAsB;AAAA,sCAAdK,KAAc;AAQrB;AACGM,iC,GAAQ,KAAKA,KAAL,CAAW,SAAX,EAAqBnB,EAArB,C;;kCACTW,QAAQG,MAAR,GAAiB,C;;;;;;mCACVK,MAAMC,OAAN,CAAcT,OAAd,EAAsB,EAAtB,EAAyB,IAAzB,C;;;;mCACAQ,MAAME,OAAN,CAAc,gIAAd,C;;;kCAEPT,WAAWE,MAAX,GAAoB,C;;;;;;mCACbK,MAAMG,MAAN,CAAa,EAACC,OAAM,EAACV,OAAO,CAAC,IAAD,EAAOD,WAAWY,IAAX,CAAgB,GAAhB,CAAP,CAAR,EAAsCf,QAAOA,MAA7C,EAAP,EAAb,C;;;8DAGH,KAAKgB,OAAL,CAAa,OAAb,C","file":"rolesys.js","sourcesContent":["'use strict';\nlet UID = require('node-uuid');\nlet DateFormat = require('dateformat');\nimport Base from './base.js';\nimport DB from '../../db.js';\nconst db = DB.dbpermission;\n\nexport default class extends Base {\n    async getAction(){\n        \n    }\n\n    // 添加一条数据\n    async setrolesysAction(){\n        if(this.http.method != 'POST') return \"\";\n        // 需要sysid, sysinfoid, roleid\n        let param = this.post();\n        if(!param.data || !param.roleid){\n            return this.fail(-1,'参数错误');\n        }\n        let addList = [];\n        let removeList = [];\n        let data = param.data;\n        let roleid = param.roleid;\n        for(let sysid in data){\n            if(data[sysid].length > 0){\n                data[sysid].map((k) => {\n                    addList.push({roleid:roleid, sysid:sysid ,sysinfoid:k});\n                });\n            }else{\n                removeList.push(sysid);\n            }\n        }\n        let model = this.model('rolesys',db);\n        if(addList.length > 0){\n            await model.addMany(addList,{},true);\n            await model.execute('delete from rolesys where id not in (select * from (select min(id) as id from rolesys group by roleid,sysid,sysinfoid) as tmp)');\n        }\n        if(removeList.length > 0){\n            await model.delete({where:{sysid: [\"IN\", removeList.join(',')], roleid:roleid} });\n        }\n       \n        return this.success('添加成功！');\n    }\n\n   \n}"]}