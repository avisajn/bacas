{"version":3,"sources":["../src/api.js"],"names":["getUserId","Fetch","url","method","body","code","time","Date","getTime","config","resolve","f","_url","console","log","req","get","post","put","delete","query","send","attach","set","withCredentials","end","err","res","toString","error","text","JSON","parse","errno","errmsg"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;kBAEe;AACdA,UADc,uBACH;;AAEV,SAAOC,MAAM;AACZC,QAAI,iEADQ;AAEZC,WAAO,KAFK;AAGZC,SAAO;AACNC,UAAO,uBAAY,EAACC,MAAM,IAAIC,IAAJ,GAAWC,OAAX,KAAwB,IAAI,EAAJ,GAAS,IAAxC,EAAZ;AADD;AAHK,GAAN,CAAP;AAOA;AAVa,C;;;AAgBf,IAAMP,QAAQ,SAARA,KAAQ,CAASQ,MAAT,EAAgB;AAC7B,QAAO,sBAAY,UAACC,OAAD,EAAUC,CAAV,EAAe;;AAEjCF,SAAON,MAAP,GAAgBM,OAAON,MAAP,IAAiB,KAAjC;AACA,MAAIS,OAAQH,OAAOP,GAAnB;AACA;AACA,MAAIE,OAAOK,OAAOL,IAAlB;AACAS,UAAQC,GAAR,CAAY,OAAZ,EAAqB,IAAIP,IAAJ,GAAWC,OAAX,KAAqB,GAA1C,EAA+CI,IAA/C,EAAqD,yBAAeR,QAAM,EAArB,CAArD;AACA,MAAIW,0BAAJ;;AAEA,MAAIN,OAAON,MAAP,KAAkB,KAAtB,EAA6BY,MAAMA,IAAIC,GAAJ,CAAQJ,IAAR,CAAN,CAA7B,KACK,IAAIH,OAAON,MAAP,KAAkB,MAAtB,EAA8BY,MAAMA,IAAIE,IAAJ,CAASL,IAAT,CAAN,CAA9B,KACA,IAAIH,OAAON,MAAP,KAAkB,KAAtB,EAA6BY,MAAMA,IAAIG,GAAJ,CAAQN,IAAR,CAAN,CAA7B,KACA,IAAIH,OAAON,MAAP,KAAkB,QAAtB,EAAgCY,MAAMA,IAAII,MAAJ,CAAWP,IAAX,CAAN;;AAErC,MAAGR,IAAH,EAAQ;AACP,OAAIK,OAAON,MAAP,KAAkB,KAAtB,EAA6BY,MAAMA,IAAIK,KAAJ,CAAUhB,IAAV,CAAN,CAA7B,KACKW,MAAMA,IAAIM,IAAJ,CAASjB,IAAT,CAAN;AACL;;AAED,MAAGK,OAAOa,MAAV,EAAkBP,MAAMA,IAAIQ,GAAJ,CAAQ,SAAR,EAAmB,qBAAnB,CAAN;AAClB,MAAGd,OAAOe,eAAV,EAA2BT,MAAMA,IAAIS,eAAJ,CAAoB,IAApB,CAAN;;AAE3BT,MAAIU,GAAJ,CAAQ,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC3B,OAAID,OAAO,CAACC,GAAZ,EAAiB;AAAEjB,YAAQ,EAAEgB,KAAIA,IAAIE,QAAJ,EAAN,EAAR,EAAiC;AAAS;AAC7D,OAAID,IAAIE,KAAR,EAAe;AAACnB,YAAQ,EAAEgB,KAAIC,IAAIG,IAAV,EAAR,EAA2B;AAAS;;AAEpDH,SAAMI,KAAKC,KAAL,CAAWL,IAAIG,IAAJ,IAAY,IAAvB,CAAN;AACA,OAAIH,IAAIM,KAAJ,GAAY,CAAhB,EAAmB;AACjBvB,YAAQ,EAAEgB,KAAIC,IAAIO,MAAV,EAAkBD,OAAMN,IAAIM,KAA5B,EAAR;AACA;AACD;AACDpB,WAAQC,GAAR,CAAY,OAAZ,EAAqB,IAAIP,IAAJ,GAAWC,OAAX,EAArB,EAA2C,yBAAemB,GAAf,CAA3C;AACAjB,WAAQiB,OAAO,EAAf;AACE,GAXH;AAYA,EAlCM,CAAP;AAmCA,CApCD","file":"api.js","sourcesContent":["import superAgentRequest from 'superagent';\nimport { encryptCode } from './util.js';\n\nexport default {\n\tgetUserId(){\n\n\t\treturn Fetch({\n\t\t\turl:'http://adnetwork.hadoopfinetech.com/adnetwork/apply_for_account' ,\n\t\t\tmethod:'get', \n\t\t\tbody : { \n\t\t\t\tcode : encryptCode({time:(new Date().getTime() +  5 * 60 * 1000)}),\n\t\t\t}\n\t\t});\n\t},\n\n\n\n};\n\nconst Fetch = function(config){\n\treturn new Promise((resolve ,f )=>{\n\n\t\tconfig.method = config.method || 'get';\n\t\tvar _url =  config.url;\n\t\t// if(!config.notCross) _url = _baseUrl + _url; \n\t\tvar body = config.body;\n\t\tconsole.log('开始请求:', new Date().getTime()+':' ,_url ,JSON.stringify(body||{}));\n\t\tvar req = superAgentRequest;\n\n\t\tif (config.method === 'get') req = req.get(_url);\n\t\telse if (config.method === 'post') req = req.post(_url);\n\t\telse if (config.method === 'put') req = req.put(_url);\n\t\telse if (config.method === 'delete') req = req.delete(_url);\n\n\t\tif(body){\n\t\t\tif (config.method === 'get') req = req.query(body);\n\t\t\telse req = req.send(body); \n\t\t}\n\n\t\tif(config.attach) req = req.set('enctype', 'multipart/form-data');\n\t\tif(config.withCredentials) req = req.withCredentials(true);\n\n\t\treq.end(function (err, res) {\n\t\t\tif (err || !res) { resolve({ err:err.toString() }) ;return ;}\n\t\t\tif (res.error) {resolve({ err:res.text }) ;return ;}\n\n\t\t\tres = JSON.parse(res.text || '{}');\n\t\t\tif (res.errno < 0) {\n\t\t\t  resolve({ err:res.errmsg, errno:res.errno })\n\t\t\t  return\n\t\t\t}\n\t\t\tconsole.log('结束请求:', new Date().getTime() ,JSON.stringify(res));\n\t\t\tresolve(res || {});\n\t  \t});\n\t})\n}"]}