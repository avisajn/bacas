FROM nipcontainerregistries.azurecr.io/wa_automate_nodejs_base_image:0.0

ENV MODE test

# create destination directory
RUN mkdir -p /usr/src/www
WORKDIR /usr/src/www


# copy the app, note .dockerignore

COPY . /usr/src/www/
# RUN npm i cnpm -g
ENV NODE_VERSION=14.18.3
RUN apt install -y curl
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"
# RUN node --version
# RUN npm --version


RUN npm i npm -g

RUN npm i typescript -g

# RUN npm i chromedriver --force

RUN apt-get update
# RUN sudo apt-get upgrade

# RUN apt-get install -y ipa-gothic-fonts xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc

# RUN apt-get install -y pango.x86_64 libXcomposite.x86_64 libXcursor.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64
RUN apt-get install -y gconf-service libgbm1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6  libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxss1 libxtst6 libappindicator1 libnss3 libasound2 libatk1.0-0 libc6 libxcb-dri3-0 ca-certificates fonts-liberation lsb-release xdg-utils wget


RUN npm install --no-package-lock

# RUN npm i cnpm -g
# RUN cnpm i puppeteer -g


# RUN npm i node-html-to-image -s
RUN npm i html-pdf-node -s

# RUN npm i html-pdf-node -s


# RUN node ./node_modules/html-pdf-node/node_modules/puppeteer/install.js


# clean old js file
RUN npm run clean

# build new js file
RUN npm run tsc



RUN cd ./app/controller && ls


# build necessary, even if no static files are needed,
# since it builds the server as well

EXPOSE 80
ENV HOST 0.0.0.0



CMD ["npm", "start"]
