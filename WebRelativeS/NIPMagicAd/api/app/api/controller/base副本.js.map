{
    "version": 3,
    "sources": [
        "../../../src/api/controller/base副本.js"
    ],
    "names": [
        "__before",
        "allowAccessOrigin",
        "http",
        "headers",
        "origin",
        "header",
        "method",
        "end",
        "url",
        "ciphertext",
        "cookie",
        "fail",
        "decryptedData",
        "id",
        "username",
        "roleids",
        "Date",
        "getTime",
        "time",
        "_userInfo",
        "getUser",
        "getRids",
        "getUserId",
        "think",
        "controller",
        "base"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;AAGE;;;mBAGMA,Q;;;;;;;;;;AAEAC,+B,GAAoB,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,M;;AAC1C,mBAAKC,MAAL,CAAY,6BAAZ,EAA2CJ,iBAA3C;AACA,mBAAKI,MAAL,CAAY,8BAAZ,EAA4C,qEAA5C;AACA,mBAAKA,MAAL,CAAY,8BAAZ,EAA4C,iCAA5C;AACA,mBAAKA,MAAL,CAAY,kCAAZ,EAAgD,MAAhD;;oBACG,KAAKH,IAAL,CAAUI,MAAV,IAAoB,S;;;;;AACrB,mBAAKC,GAAL;;;;oBAIC,KAAKL,IAAL,CAAUM,GAAV,IAAiB,a;;;;;;AAClB,oBAAIC,aAAa,OAAKC,MAAL,CAAY,OAAZ,CAAjB;AACA,oBAAG,CAACD,UAAD,IAAeA,cAAc,GAAhC,EAAoC;AAClC;AAAA,uBAAO,OAAKE,IAAL,CAAU,CAAC,EAAX;AAAP;AACD;;AAED,oBAAMC,gBAAgB,uBAAYH,UAAZ,CAAtB;AACA,oBAAG,CAACG,aAAD,IAAkB,CAACA,cAAcC,EAAjC,IAAuC,CAACD,cAAcE,QAAtD,IAAkE,CAACF,cAAcG,OAApF,EAA4F;AAC1F;AAAA,uBAAO,OAAKJ,IAAL,CAAU,CAAC,EAAX;AAAP;AACD;AACD,oBAAG,IAAIK,IAAJ,GAAWC,OAAX,MAAwBL,cAAcM,IAAzC,EAA8C;AAC5C;AAAA,uBAAO,OAAKP,IAAL,CAAU,CAAC,EAAX;AAAP;AACD;AACD,oBAAIQ,YAAYP,aAAhB;AACA,uBAAKQ,OAAL,GAAe,YAAU;AACvB,yBAAOD,SAAP;AACD,iBAFD;;AAIA,uBAAKE,OAAL,GAAe,YAAU;AACvB,yBAAOF,UAAUJ,OAAjB;AACD,iBAFD;;AAIA,uBAAKO,SAAL,GAAiB,YAAU;AACvB,yBAAOH,UAAUN,EAAjB;AACH,iBAFD;;;;;;;;;;;;;;;;;;;;;;;;;;EAtCuBU,MAAMC,UAAN,CAAiBC,I",
    "file": "../../../src/api/controller/base副本.js",
    "sourcesContent": [
        "'use strict';\n\nimport {decryptCode} from '../../util.js';\n\nexport default class extends think.controller.base {\n  /**\n   * some base method in here\n   */\n  async __before() {\n\n    let allowAccessOrigin = this.http.headers.origin;\n    this.header('Access-Control-Allow-Origin', allowAccessOrigin);\n    this.header('Access-Control-Allow-Headers', 'Content-Type,Content-Length, Authorization, Accept,X-Requested-With');\n    this.header('Access-Control-Allow-Methods', \"GET, POST, PUT, DELETE, OPTIONS\");\n    this.header('Access-Control-Allow-Credentials', 'true');\n    if(this.http.method == \"OPTIONS\"){\n      this.end();\n      return;\n    }\n\n    if(this.http.url != '/api/login/'){\n      let ciphertext = this.cookie(\"token\");\n      if(!ciphertext || ciphertext == '0'){\n        return this.fail(-99);\n      }\n\n      const decryptedData = decryptCode(ciphertext);\n      if(!decryptedData || !decryptedData.id || !decryptedData.username || !decryptedData.roleids){\n        return this.fail(-99);\n      }\n      if(new Date().getTime() >= decryptedData.time){\n        return this.fail(-98);\n      }\n      let _userInfo = decryptedData;\n      this.getUser = function(){\n        return _userInfo;\n      }\n\n      this.getRids = function(){\n        return _userInfo.roleids;\n      }\n\n      this.getUserId = function(){\n          return _userInfo.id;\n      }\n    }\n  }\n}"
    ]
}