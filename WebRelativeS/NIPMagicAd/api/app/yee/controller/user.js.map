{"version":3,"sources":["../../../src/yee/controller/user.js"],"names":["getAction","get","time","currentTime","Date","getTime","keyName","parseInt","key","expire","ran","Math","random","right_arr","left_arr","idx","floor","substr","length","split","map","k","v","charCodeAt","push","success","substring","l","join","r","valAction","p","allow","fail","res","id","completeInfo","phone","name","username","avatar","end","vip_end_time","ci"],"mappings":"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","file":"user.js","sourcesContent":["'use strict';\nimport Base from './base.js';\nimport {encryptCode ,decryptCode } from '../../util.js';\nimport moment from 'moment';\n\n\nexport default class extends Base {\n    // 得到一个KEY\n    getAction(){\n        const { time } = this.get();\n        // if(!time || !this.allow) return this.fail(-1,'参数不正确！');\n        const currentTime = new Date().getTime()+3000;\n        // console.log('get:::服务器时间: ',currentTime,'  接收到的时间: ' ,time ,'  currentTime < time:',currentTime < time ,'  time < (currentTime-1000*15):',time < (currentTime-1000*15))\n        // 这里存在时区转换的问题\n        // if(currentTime < time || time < (currentTime-1000*15)) return this.fail(-2,'参数2不正确');\n        // if(!( currentTime>=time && time>=(currentTime-1000*15) )) return this.fail(-2,'参数不正确');\n        const keyName = 'ymark-yuxiaoli-'+(currentTime - parseInt(time));\n        // 这里面有10秒的操作时间-如果接口再10秒之内没有开始请求，则算作失败\n        let key = encryptCode({expire : new Date().getTime() + 1000 * 10, ran:Math.random()*10000 },keyName); \n        const right_arr = [];\n        const left_arr = [];\n        const idx = Math.floor(1+Math.random()*(10-1));;\n        (key.substr(key.length - idx)).split('').map((k) => {\n            const v = k.charCodeAt(0);\n            if(v<100) right_arr.push('0'+v);\n            else right_arr.push(v);\n        });\n        (key.substr(0,idx)).split('').map((k) => {\n            const v = k.charCodeAt(0);\n            if(v<100) left_arr.push('0'+v);\n            else left_arr.push(v);\n        });\n\n        return this.success({\n            k : Math.random()*19990+'898.88'+Math.random()*100+'<'+key.substring(idx ,key.length-idx)+'>'+Math.random()*1000+'09287.'+Math.random()*1000+''+idx,\n            l : parseInt(Math.random()*19990)+'.'+time+'.970'+left_arr.join(''),\n            r : parseInt(Math.random()*19990)+'.'+currentTime+'.786'+right_arr.join('')\n        });\n    }\n\n    // 破解一个KEY\n    // sAction(){\n    //     return this.fail(-1);\n    //     // 先得到keyName\n    //     const {l:left_str ,r:right_str ,k:key_str} = {\"k\":\"6035.018649106313898.8855.31807250147578<K6a617U+0Ji7BNLdkEbfNOTxbtH+IIVRTy/TQeTCYkLdXk7EatVorHGgyQvCRpHl+vKBhDLxeg>628.274665205293609287.111.834312803066551\",\"l\":\"15032.1508305358441.970054\",\"r\":\"16806.1508312472553.786061\",\"key\":\"6K6a617U+0Ji7BNLdkEbfNOTxbtH+IIVRTy/TQeTCYkLdXk7EatVorHGgyQvCRpHl+vKBhDLxeg=\",\"keyName\":\"ymark-yuxiaoli-7114112\"} || {};\n    //     if(!left_str || !right_str || !key_str || left_str.indexOf('.970')<0 || right_str.indexOf('.786')<0) return this.fail(-1,'参数不正确！');\n    //     const left_arr = left_str.split('.');\n    //     const right_arr = right_str.split('.');\n    //     try{ \n    //         const key_name = 'ymark-yuxiaoli-'+(parseInt(right_arr[1]) - parseInt(left_arr[1]));\n    //         const idx = key_str.substr(key_str.length-1);   // 获取idx\n    //         const left_key = left_arr[2].substr(3);\n    //         const right_key = right_arr[2].substr(3);\n    //         let _lk = '';\n    //         let _rk = '';\n    //         for(var i=0;i<idx;i++){\n    //             _lk += String.fromCharCode(parseInt(left_key.substring(3*i ,3*(i+1))));\n    //             _rk += String.fromCharCode(parseInt(right_key.substring(3*i ,3*(i+1))));\n    //         }\n    //         let code = key_str.match(/\\<(.*?)\\>/gi)[0];\n    //         code = _lk+''+(code.substring(1 ,code.length-1))+''+_rk;\n    //         return this.success(decryptCode(code ,key_name));\n    //         // 获取到完整的key\n    //     }catch(e){\n    //         return this.fail(-1,'错误！');\n    //     }\n    //     return this.success(1);\n    // }\n\n    // 验证token是否有效\n    valAction(){\n        const { time ,p } = this.get();\n        if(!time || !p || !this.allow) return this.fail(-1,'参数不正确！');\n        const currentTime = new Date().getTime()+3000;\n        // console.log('val:::服务器时间: ',currentTime,'  接收到的时间: ' ,time ,'  currentTime < time:',currentTime < time ,'  time < (currentTime-1000*15):',time < (currentTime-1000*15))\n        // 这里存在时区转换的问题\n        if(!( currentTime>=time && time>=(currentTime-1000*15) )) return this.fail(-2,'参数不正确');\n        const res = decryptCode(p, 'ymark-login-user-info');\n        if(!res || !res.id || (!res.completeInfo && !res.phone && !res.name)) return this.success(false);\n        return this.success({username : res.username ,avatar:res.avatar ,end:res.vip_end_time||'' ,ci:res.completeInfo ,id:res.id});\n    }\n\n}   "]}