{
    "version": 3,
    "sources": [
        "../../../src/json/controller/file.js"
    ],
    "names": [
        "container",
        "cdnHost",
        "id",
        "br",
        "db",
        "dbmagicad",
        "blobService",
        "createBlobService",
        "fileService",
        "createFileService",
        "renameFile",
        "tmp_path",
        "target_path",
        "r",
        "f",
        "rename",
        "err",
        "unlink",
        "getFile",
        "name",
        "file_path",
        "think",
        "RUNTIME_PATH",
        "stream",
        "createWriteStream",
        "getBlobToStream",
        "error",
        "result",
        "response",
        "console",
        "log",
        "getList",
        "path",
        "listBlobsSegmented",
        "res",
        "entries",
        "map",
        "push",
        "uploadFile",
        "country",
        "createBlockBlobFromLocalFile",
        "isSuccessful",
        "getAction",
        "list",
        "success",
        "uploadAction",
        "uploadimageAction",
        "http",
        "method",
        "fail",
        "param",
        "post",
        "start",
        "end",
        "title",
        "file",
        "_file",
        "oldName",
        "originalFilename",
        "ext",
        "substring",
        "lastIndexOf",
        "uploadImage",
        "url"
    ],
    "mappings": "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",
    "file": "../../../src/json/controller/file.js",
    "sourcesContent": [
        "'use strict';\nimport azure from 'azure-storage';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\nimport fs from 'fs';\n\n\nconst container = 'test';\nconst cdnHost = {\n    id : 'http://img.cdn.baca.co.id/',\n    br : 'http://img.cdn.baca.co.id/'\n}\n\n\nconst db = DB.dbmagicad;\n\nconst blobService = azure.createBlobService('nipcleantool', '7kAN5quppIjeVs5KvAtC1UXcP1UBwgWJzIvWXNtosa4ZYf7Z20jmVncM8VaQtGGJPjfCivzvnIBN41BZfYjYQg==');\n\n\nconst fileService = azure.createFileService('nipcleantool', '7kAN5quppIjeVs5KvAtC1UXcP1UBwgWJzIvWXNtosa4ZYf7Z20jmVncM8VaQtGGJPjfCivzvnIBN41BZfYjYQg==');\n\n\nconst renameFile = function(tmp_path ,target_path){\n    return new Promise((r ,f) => {\n        // // 移动文件\n        fs.rename(tmp_path, target_path, function(err) {\n            if (err) throw err;\n            // 删除临时文件夹文件, \n            fs.unlink(tmp_path, function() {\n                if (err) throw err;  \n                r();\n            });\n        });\n    })\n},\n\ngetFile = function(name){\n    let file_path = think.RUNTIME_PATH + '/json/'+name ;\n    let stream = fs.createWriteStream(file_path);\n    return new Promise((r ,f) => {\n        blobService.getBlobToStream(container, name, stream, function(error, result, response) {\n            console.log('error' ,error);\n            console.log('error' ,); // 返回一个JSON地址，\n            // if (!error) return r({err:JSON.stringify(error)}); \n            console.log(stream);\n            return r()\n        });\n    })\n\n},\n\ngetList = function(name){\n    let file_path = think.RUNTIME_PATH + '/json/'+name ;\n    return new Promise((r ,f) => {\n        const path = 'https://nipcleantool.blob.core.windows.net/resources/';\n        blobService.listBlobsSegmented(container, null, function(error, result, response) {\n            if (error!=null && typeof(error) != 'undefined' ) return r({err:JSON.stringify(error)}); \n            const res = [];\n            result.entries.map(({name}) => res.push(path+name));\n            return r(res);\n        });\n    })\n\n},\n\n\nuploadFile = function(name ,country){\n    let file_path = think.RUNTIME_PATH + '/upload/' + name;\n    return new Promise((r ,f) => {\n        blobService.createBlockBlobFromLocalFile(container, 'ads/'+name, file_path , function(error, result, response) {\n            if (error || !response.isSuccessful) {r({error}); return; }\n            // r({error ,url:cdnHost[country] + 'ads/'+name});\n        });\n    })\n\n}\n\n\nexport default class extends Base {\n    // 返回处理后的列表\n    async getAction(){\n        const list = await getList();\n        return this.success(list);\n    }\n\n    async uploadAction(){\n        const list = await getList();\n        return this.success(list);\n    }\n\n\n\n\n    async uploadimageAction(){\n        // 参考 https://github.com/Azure/azure-storage-node\n        if(this.http.method!='POST'){\n            return this.fail(-1);\n        }\n\n        let param = this.post(),\n            start = param.start ,\n            end = param.end,\n            title = param.title;\n\n        let file = this.http._file[0];\n\n        if(!file || !start || !end || !title){\n            return this.fail(-1 ,'参数错误！');\n        }\n\n        let tmp_path = file.path,\n            oldName = file.originalFilename,\n            ext  = oldName.substring(oldName.lastIndexOf('.'));\n\n        let name = title+\"_\"+start+\"_\"+end+ext;\n\n        let target_path = think.RUNTIME_PATH + '/upload/' + name;\n\n        await renameFile(tmp_path ,target_path);\n\n\n        const {error ,url} = await uploadImage(name ,'id');\n        if(error){\n            return this.fail(-1 ,'上传错误！'+JSON.stringify(error));\n        }\n        return this.success(url);\n    }\n\n\n\n}   "
    ]
}