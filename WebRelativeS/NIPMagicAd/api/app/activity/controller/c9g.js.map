{"version":3,"sources":["../../../src/activity/controller/c9g.js"],"names":["db","activity","getRandom","min","max","parseInt","Math","random","getFixed","v","fixNum","Number","toFixed","getinfoAction","fail","get","ud","model_all_user","model","field","where","select","users","length","success","subAction","post","user_key","uk","user_id","uid","name","phone","res","address","support_girl","sp","model_girl","num","id","err","add","k","avatar","update","res_json","select_img","getAction","group","statistic","u","s"],"mappings":"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","file":"c9g.js","sourcesContent":["'use strict';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\n\nconst db = DB.activity;\n\n\nconst getRandom = function(min ,max){\n    return parseInt(Math.random()*(max-min+1)+min,10);\n}\n\nconst getFixed = function (v){\n    let fixNum = new Number(v+1).toFixed(2);//四舍五入之前加1  \n    return new Number(fixNum - 1).toFixed(2);\n}\n\n\nexport default class extends Base {\n\n    // 根据uk获取用户信息\n    async getinfoAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { ud } = this.get();\n        if(!ud) return this.fail(-1, '参数错误！');\n        let model_all_user = this.model('all_user' ,db);\n        let users = await model_all_user.field('id,name,phone,address').where(\"k='\"+ud+\"'\").select();\n        if(users.length <= 0) return this.success(null);\n        users = users[0];\n        return this.success(users);\n    }\n\n    // 提交信息\n    async subAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        let { \n            uk:user_key ,\n            uid : user_id , // 用户ID\n            name ,    \n            phone ,   \n            res ,\n            address ,   \n            sp:support_girl , // 提交者的头像\n        } = this.post();\n\n\n        if(!name||!phone||!address||!support_girl||!res) return this.fail(-1,'参数错误！');\n\n        let model_girl = this.model('campagin9girl' ,db);\n        let num = await model_girl.where(` name='${name}' and phone='${phone}' `).select();\n        if(num.length > 0) return this.success({id:num[0].id, err:'重复添加'});\n        let model_all_user = this.model('all_user' ,db);\n        if(user_id || user_key){\n            if(!user_id){\n                user_id = await model_all_user.add({\n                    k : user_key, // 题库ID\n                    name : name, // 发起用户姓名\n                    phone : phone, // 发起用户ID\n                    address : address,\n                    avatar : '-'\n                });\n            }else{\n                await model_all_user.where(`id=${user_id} and k='${user_key}'`).update({\n                    name : name ,\n                    phone : phone ,\n                    address : address\n                });\n            }\n        }\n\n        // 向记录表中插入一条记录\n        let uid = await model_girl.add({\n            k : user_key, // 题库ID\n            uid : user_id, // 发起用户ID\n            name : name, // 发起用户姓名\n            phone : phone,\n            res_json : res,\n            select_img : support_girl,\n        });\n\n\n        return this.success({id:uid});\n\n    }\n\n    // 根据用户id，uk查询用户选择的支持女生\n    async getAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        let model = this.model('campagin9girl' ,db);\n        let statistic = await model.field('select_img s,count(1) n').group('select_img').select();\n        const { ud ,uid } = this.get();\n        if(!ud && !uid) return this.success({u:null ,s:statistic});\n        let users = await model.field('id,name,select_img').where(\"k='\"+ud+\"' or id='\"+uid+\"'\").select();\n        if(users.length <= 0) return this.success({u:null ,s:statistic});\n        users = users[0];\n        return this.success({u:users ,s:statistic});\n    }\n\n\n\n}   "]}