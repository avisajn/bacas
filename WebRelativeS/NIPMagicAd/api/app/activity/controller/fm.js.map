{"version":3,"sources":["../../../src/activity/controller/fm.js"],"names":["db","activity","setprizeAction","fail","model_film_user","model","where","ids","update","prizename","prize_name","res","success","num","removeAction","console","log","delete","id","queryprizeAction","userList","length","map","k","JSON","parse","_al","j","v","e","queryuserAction","list"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,KAAK,aAAGC,QAAd;;;;;;;;;;AAII;qBACMC,c;;;;;;;;6DACK,KAAKC,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAIHC,2C,GAAkB,KAAKC,KAAL,CAAW,eAAX,EAA4BL,EAA5B,C,EAAiC;;;mCACrCI,gBAAgBE,KAAhB,aAAgCC,GAAhC,QAAwCC,MAAxC,CAA+C,EAACC,WAAUC,UAAX,EAA/C,C;;;AAAZC,+B;6DACC,KAAKC,OAAL,CAAa,EAACC,KAAIF,GAAL,EAAUA,KAAI,OAAd,EAAb,C;;;;;;;;;;;;;;;;;AAGX;;;qBACMG,Y;;;;;;;;8DACK,KAAKX,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAIHC,2C,GAAkB,KAAKC,KAAL,CAAW,eAAX,EAA4BL,EAA5B,C,EAAiC;;AACvDe,oCAAQC,GAAR,CAAY,MAAZ,EAAmBT,GAAnB;;mCACmBH,gBAAgBa,MAAhB,CAAuB,EAACX,OAAM,EAACY,IAAG,CAAC,IAAD,EAAMX,GAAN,CAAJ,EAAP,EAAvB,C;;;AAAbI,+B;8DACC,KAAKC,OAAL,CAAa,EAACC,KAAIF,GAAL,EAAUA,KAAI,OAAd,EAAb,C;;;;;;;;;;;;;;;;;AAGX;;;qBACMQ,gB;;;;;;;8DACK,KAAKhB,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAEDiB,oC;;kCAIHA,SAASC,MAAT,IAAiB,C;;;;;8DAAU,KAAKT,OAAL,CAAa,EAAb,C;;;AAC9BQ,qCAASE,GAAT,CAAa,UAACC,CAAD,EAAO;AAChB,oCAAG;AAAA;AACC,4CAAMZ,MAAMa,KAAKC,KAAL,CAAWF,EAAEZ,GAAb,CAAZ;AACA,4CAAMe,MAAM,EAAZ;AACAf,4CAAIW,GAAJ,CAAQ,UAACK,CAAD,EAAO;AACXD,gDAAI,MAAIC,EAAEJ,CAAV,IAAeI,EAAEC,CAAF,CAAI,CAAJ,CAAf;AACH,yCAFD;AAGAL,0CAAEZ,GAAF,GAAQe,GAAR;AAND;AAOF,iCAPD,CAOC,OAAMG,CAAN,EAAQ;AACLN,sCAAEZ,GAAF,GAAQ,EAAR;AACH;AACJ,6BAXD;8DAYO,KAAKC,OAAL,CAAaQ,QAAb,C;;;;;;;;;;;;;;;;;AAGX;;;qBACMU,e;;;;;;;8DACC,KAAK3B,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAEC4B,gC;;kCACDA,KAAKV,MAAL,IAAa,C;;;;;8DAAU,KAAKT,OAAL,CAAa,EAAb,C;;;AAC1BmB,iCAAKT,GAAL,CAAS,UAACC,CAAD,EAAO;AACZ,oCAAG;AAAA;AACC,4CAAMZ,MAAMa,KAAKC,KAAL,CAAWF,EAAEZ,GAAb,CAAZ;AACA,4CAAMe,MAAM,EAAZ;AACAf,4CAAIW,GAAJ,CAAQ,UAACK,CAAD,EAAO;AACXD,gDAAI,MAAIC,EAAEJ,CAAV,IAAeI,EAAEC,CAAF,CAAI,CAAJ,CAAf;AACH,yCAFD;AAGAL,0CAAEZ,GAAF,GAAQe,GAAR;AAND;AAOF,iCAPD,CAOC,OAAMG,CAAN,EAAQ;AACLN,sCAAEZ,GAAF,GAAQ,EAAR;AACH;AACJ,6BAXD;8DAYO,KAAKC,OAAL,CAAamB,IAAb,C","file":"fm.js","sourcesContent":["'use strict';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\nimport fs from 'fs';\n\nconst db = DB.activity;\n\nexport default class extends Base {\n\n    // 设置中奖\n    async setprizeAction(){\n        return this.fail(-1 ,'not allow'); \n        let {ids , pnm:prize_name } = this.post();\n        if(!ids||!prize_name) return this.fail(-1,'参数错误！');\n\n        let model_film_user = this.model('campagin9girl' ,db); //prizename='123'\n        const res = await model_film_user.where(`id in (${ids})`).update({prizename:prize_name});\n        return this.success({num:res ,res:'设置成功！'});\n    }\n\n    // 设置中奖\n    async removeAction(){\n        return this.fail(-1 ,'not allow'); \n        let {ids} = this.post();\n        if(!ids) return this.fail(-1,'参数错误！');\n\n        let model_film_user = this.model('campagin9girl' ,db); //prizename='123'\n        console.log('ids:',ids);\n        const res =  await model_film_user.delete({where:{id:['IN',ids]}});\n        return this.success({num:res ,res:'删除成功！'});\n    }\n\n    // 获取已经中奖的用户\n    async queryprizeAction(){\n        return this.fail(-1 ,'not allow'); \n        let model_film_prize = this.model('campagin9girl' ,db);\n        const userList = await model_film_prize\n                                .field('name,phone,address,select_img img,res_json res,prizename')\n                                .where(`prizename is not null`)\n                                .select();\n        if(userList.length<=0) return this.success([]);\n        userList.map((k) => {\n            try{\n                const res = JSON.parse(k.res);\n                const _al = {};\n                res.map((j) => {\n                    _al['_'+j.k] = j.v[0];\n                })\n                k.res = _al;\n            }catch(e){\n                k.res = {};\n            }\n        })\n        return this.success(userList);\n    }\n\n    // 查询用户列表 - 一口气返回所有的\n    async queryuserAction(){\n    return this.fail(-1 ,'not allow');  \n        let model_film_standing = this.model('campagin9girl' ,db);\n        let list = await model_film_standing.query(`select max(id)id,name,phone,max(address)address,max(select_img)girl,max(res_json)res from campagin9girl where res_json is not null and prizename is null group by name,phone order by id desc;`);\n        if(list.length<=0) return this.success([]);\n        list.map((k) => {\n            try{\n                const res = JSON.parse(k.res);\n                const _al = {};\n                res.map((j) => {\n                    _al['_'+j.k] = j.v[0];\n                })\n                k.res = _al;\n            }catch(e){\n                k.res = {};\n            }\n        })\n        return this.success(list);\n    }\n\n}   "]}