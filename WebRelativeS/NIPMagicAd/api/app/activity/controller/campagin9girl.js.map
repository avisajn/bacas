{"version":3,"sources":["../../../src/activity/controller/campagin9girl.js"],"names":["db","activity","cache","maxAge","getRandom","min","max","parseInt","Math","random","getFixed","v","fixNum","Number","toFixed","getinfoAction","fail","get","ud","model_all_user","model","field","where","select","users","length","success","subAction","post","user_key","uk","user_id","uid","name","phone","res","address","support_girl","sp","ip","random_key","model_girl","num","id","err","add","k","res_json","select_img","new_id","getAction","group","statistic","u","s"],"mappings":"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","file":"campagin9girl.js","sourcesContent":["'use strict';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\n\nconst db = DB.activity;\nimport LRU from 'lru-cache';\nconst cache = LRU({maxAge: 1000 * 60 * 5 });\n\n\nconst getRandom = function(min ,max){\n    return parseInt(Math.random()*(max-min+1)+min,10);\n}\n\nconst getFixed = function (v){\n    let fixNum = new Number(v+1).toFixed(2);//四舍五入之前加1  \n    return new Number(fixNum - 1).toFixed(2);\n}\n\n\nexport default class extends Base {\n\n    // 根据uk获取用户信息\n    async getinfoAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { ud } = this.get();\n        if(!ud) return this.fail(-1, '参数错误！');\n        let model_all_user = this.model('all_user' ,db);\n        let users = await model_all_user.field('id,name,phone,address').where(\"k='\"+ud+\"'\").select();\n        if(users.length <= 0) return this.success(null);\n        users = users[0];\n        return this.success(users);\n    }\n\n    // 提交信息\n    async subAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        let { \n            uk:user_key ,\n            uid : user_id , // 用户ID\n            name ,    \n            phone ,   \n            res ,\n            address ,   \n            sp:support_girl , // 提交者的头像\n        } = this.post();\n\n        const ip = this.ip();\n\n        let random_key = this.uk;\n        if(!name||!phone||!address||!support_girl||!res) return this.fail(-1,'参数错误！');\n        if(phone.length <= 5) return this.fail(-1,'参数错误！');\n\n        let model_girl = this.model('campagin9girl' ,db);\n        // let num = await model_girl.where(`ip='${ip}'`).select();\n        // if(num.length >= 3) {\n            // console.log('error:ip address:', ip);\n            // return this.success({err:'错误'});\n        // }\n        let num = await model_girl.where(`ip='${random_key}' or ( name='${name}' and phone='${phone}' )`).select();\n        if(num.length > 0) return this.success({id:num[0].id, err:'重复添加'});\n        let model_all_user = this.model('all_user' ,db);\n        // if(user_id || user_key){\n        //     if(!user_id){\n        //         user_id = await model_all_user.add({\n        //             k : this.uk, // 题库ID\n        //             name : name, // 发起用户姓名\n        //             phone : phone, // 发起用户ID\n        //             address : address,\n        //             avatar : '-'\n        //         });\n        //     }else{\n        //         await model_all_user.where(`id=${user_id} and k='${user_key}'`).update({\n        //             name : name ,\n        //             phone : phone ,\n        //             address : address\n        //         });\n        //     }\n        // }\n\n        // 向记录表中插入一条记录\n        let new_id = await model_girl.add({\n            k : user_key, // 题库ID\n            uid : user_id, // 发起用户ID\n            name : name, // 发起用户姓名\n            phone : phone,\n            res_json : res,\n            address : address,\n            select_img : support_girl,\n            ip : random_key\n        });\n\n\n        return this.success({id:new_id});\n\n    }\n\n    // 根据用户id，uk查询用户选择的支持女生\n    async getAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        let model = this.model('campagin9girl' ,db);\n        let statistic = await model.field('select_img s,count(1) n').group('select_img').select();\n        const { ud ,id } = this.get();\n        if(!id) return this.success({u:null ,s:statistic});\n        let where = \"\";\n        if(ud){\n            where = \"k='\"+ud+\"\";\n        }else{\n            where = \"id='\"+id+\"'\";\n        }\n        let users = await model.field('id,name,select_img').where(where).select();\n        if(users.length <= 0) return this.success({u:null ,s:statistic});\n        users = users[0];\n        return this.success({u:users ,s:statistic});\n    }\n\n\n\n}   "]}