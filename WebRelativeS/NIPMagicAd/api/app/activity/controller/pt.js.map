{"version":3,"sources":["../../../src/activity/controller/pt.js"],"names":["db","activity","cache","maxAge","getRandom","min","max","parseInt","Math","random","getFixed","v","fixNum","Number","toFixed","verifyToken","token","res","userid","utc","date_time","Date","e","userAction","allow","method","fail","post","t","user_id","localData","get","success","rankingAction","page","length","model","field","limit","order","select","lists","set","addAction","console","log","ent","time","name","phone","city","where","old_list","del","id","update","add","new_id","alluserAction","list","json","passuserAction","adduserAction"],"mappings":"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","file":"pt.js","sourcesContent":["'use strict';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\nimport {decryptCode ,simpleDecryptCode} from '../../util.js';\n\nconst db = DB.activity;\nimport LRU from 'lru-cache';\nconst cache = LRU({maxAge: 1000 * 60 * 30 });\n\n\n// http://img.cdn.baca.co.id/event/top10/avatar/1.png\nconst getRandom = function(min ,max){\n    return parseInt(Math.random()*(max-min+1)+min,10);\n}\n\nconst getFixed = function (v){\n    let fixNum = new Number(v+1).toFixed(2);//四舍五入之前加1  \n    return new Number(fixNum - 1).toFixed(2);\n}\n\nconst verifyToken = function (token) {\n    try{\n        const res = decryptCode(token ,'ymark-campaign');\n        if(!res || !res.userid || !res.utc || res.userid == 'wap_') return false;\n        const date_time = new Date(res.utc);\n        // if(typeof(date_time) != 'object') return false;\n        // const current_utc_str = (new Date()).toUTCString();\n        // const current_utc_time = (new Date( current_utc_str  )).getTime();\n        // 差值必须小于20分钟以内\n        // if(parseInt(Math.abs(date_time.getTime() - current_utc_time)/(1000*60)) >= 20){\n            // return false;\n        // }\n        return res.userid;\n    }catch(e){\n        return false;\n    }\n}\n\nexport default class extends Base {\n\n    async userAction(){\n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        const {t} = this.post();\n        if(!t) return this.fail(-1, '参数错误！');\n        const user_id = verifyToken(t);\n        if(!user_id) return this.fail(-1.2, '参数错误！');\n        const localData = cache.get('user_id_object');\n        if(localData && localData[user_id]) return this.success(localData[user_id]);\n        // 数据库\n        return this.fail(-2, 'null');\n    }\n\n\n    // 获得排名\n    async rankingAction(){\n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { page=1 } = this.get();\n        const localData = cache.get('pt-ranking'+page);\n        if(localData && localData.length > 0) return this.success(localData);\n        let model = this.model('pt_user' ,db);\n        let lists = await model.field('name ,time').limit(0,20).order('time').select();\n        cache.set('pt-ranking'+page ,lists);\n        return this.success(lists);\n    }\n\n    async addAction(){\n        console.log('add--->interface');\n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        const { t:ent } = this.post();\n        if(!ent) return this.fail(-1.1 ,'参数错误！');\n        \n        const res = simpleDecryptCode(ent ,'only-test');\n        if(!res)  return this.fail(-1.2 ,'参数错误！');\n        let { time ,name, phone ,city,t } = res;\n        if(!time || !name || !phone || !city || !t) return this.fail(-1.21, '参数错误！');\n        const user_id = verifyToken(t);\n        console.log('验证结束！',t,'  ++userid++:',user_id);\n        if(!user_id) return this.fail(-1.3 ,'参数错误！');\n        let model = this.model('pt_user' ,db);\n        // 查询一下\n        const old_list = await model.field('id,time').where(\" phone='\"+phone+\"' and name='\"+name+\"' \").select();\n        console.log('old_list:',old_list);\n        if(old_list && old_list.length > 0){    // 判断是否为最好成绩\n            if(time < old_list[0].time ){   // 则意味着 需要更新数据库\n                cache.del('pt-ranking');\n                await model.where(`id=${old_list[0].id}`).update({time : time });\n                console.log('刷新成绩！');\n                return this.success('已经刷新成绩！'); \n            }\n            return this.success('无需添加，不是最好的成绩');\n        }else{\n            console.log('开始添加！');\n            let new_id = await model.add({\n                time : time, // 发起用户姓名\n                name : name ,\n                phone : phone ,\n                city : city ,\n                user_id : user_id,\n            });\n            console.log('添加结果！' ,new_id);\n            if(new_id > 0) {\n                let localData = cache.get('user_id_object') || {};\n                localData[user_id] = {name:name ,phone:phone ,city:city};\n                cache.set('user_id_object' ,localData);\n                cache.del('pt-ranking');\n                console.log('添加成功！');\n                return this.success('添加成功！');\n            }else{\n                return this.fail(-2,'添加失败！');\n            }\n            \n        }\n    }\n\n    async alluserAction(){\n        let model = this.model('pt_user_temp' ,db);\n        const list = await model.field('name,phone,city').select();\n        return this.json(list);\n    }\n\n    async passuserAction(){\n        let model = this.model('pt_user' ,db);\n        const list = await model.field('name,phone,city,time').select();\n        return this.json(list);\n    }\n\n\n\n    async adduserAction(){\n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        let { name, phone ,city ,userid } = this.post();\n        if( !name || !phone || !city || !userid ) return this.fail(-1.21, '参数错误！');\n        let model = this.model('pt_user_temp' ,db);\n        let new_id = await model.add({\n            name : name ,\n            phone : phone ,\n            city : city ,\n            user_id : userid,\n        });\n        if(new_id > 0) {\n            let localData = cache.get('user_id_object') || {};\n            localData[userid] = {name:name ,phone:phone ,city:city};\n            cache.set('user_id_object' ,localData);\n            return this.success('添加成功！');\n        }else{\n            return this.fail(-2,'添加失败！');\n        }\n    }\n\n\n}"]}