{"version":3,"sources":["../../../src/activity/controller/film.js"],"names":["cache","maxAge","avatarArr","nameArr","tempResultArr","tempTimeArr","db","activity","getPw","cs","sl","getRandom","min","max","parseInt","Math","random","getFixed","v","fixNum","Number","toFixed","prizelistAction","fail","localData","get","length","success","model_film_prize","model","currentDateTime","add","format","alias","field","join","order","where","select","userList","_phone","map","k","sj","substring","set","pmlistAction","currentDate","currentHH","zys","xm","model_film_standing","limit","myinfoAction","ud","uid","model_film_user","user","avatar_img","name","avatar","phone","address","isupd","user_id","id","tx","upd","mz","mystandingAction","record","pw","pm","sql","query","pmInfo","i","myrecordAction","model_film_record","recordList","gettikunotAction","tiku_ids","otherObjs","tiku_id","gettikuAction","currentTikuId","tk","model_film_tiku","tiku_info","question","JSON","parse","question_json","push","opponent","oid","onm","oav","jg","pstadingAction","post","create_id","cid","create_name","cnm","create_avatar","cvt","opponent_id","aid","opponent_name","anm","opponent_avatar","avt","total_time","record_json","jgjson","res","create_user_id","create_user_name","create_user_avatar","opponent_user_id","opponent_user_name","opponent_user_avatar","record_id","oldStanding","times","winning","date","console","log","win_times","win","total_times","update","parseFloat","del","pinfoAction","udKey","nm","av","ph","ad","pupd","d","updParam","upds","msg","pavatarAction"],"mappings":"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","file":"film.js","sourcesContent":["'use strict';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\nimport fs from 'fs';\n\nimport LRU from 'lru-cache';\nconst cache = LRU({maxAge: 1000 * 60 * 20 });\n\n\nconst avatarArr = ['1.jpg','2.jpg','3.jpg','4.jpg','5.jpg','6.jpg','7.jpg','8.jpg','9.jpg','10.jpg','11.jpg','12.jpg','14.jpg','15.jpg','16.jpg','17.jpg','18.jpg','19.jpg','21.jpg','22.jpg','23.jpg','24.jpg','25.jpg','26.jpg','27.jpg','28.jpg','29.jpg','30.jpg','31.jpg','32.jpg','33.jpg','34.jpg','35.jpg','36.jpg','37.jpg','38.jpg','39.jpg','40.jpg','41.jpg','42.jpg','43.jpg','44.jpg','45.jpg','46.jpg','47.jpg','48.jpg','49.jpg','50.jpg','51.jpg','52.jpg','53.jpg','54.jpg','55.jpg','56.jpg','57.jpg','58.jpg','59.jpg','60.jpg','61.jpg','62.jpg','63.jpg','64.jpg','65.jpg','66.jpg','67.jpg','68.jpg','69.jpg','70.jpg','71.jpg','72.jpg','73.jpg','84.jpg'];\nconst nameArr = ['Ahmad', 'Levina', 'Christina', 'Natasha', 'Lidya', 'Johan', 'Rangga', 'Dimas', 'Randy', 'Jason'];\nconst tempResultArr = [[-1,1,1,-1,1,-1], [1,-1,-1,-1,1,1], [1,1,1,1,1,-1], [-1,1,1,1,1,1], [-1,1,1,-1,-1,-1]];\nconst tempTimeArr = ['15.1','6.88','12.6','15','20','18.4','13.8'];\n\nconst db = DB.activity;\n\n// 倔强青铜 （PK<=2次）\n// 秩序白银 （PK<=4次 且 胜率>40%）\n// 荣耀黄金 （PK<=6次 且 胜率>50%）\n// 尊贵铂金 （PK<=8次 且 胜率>60%）\n// 永恒钻石 （PK<=10次 且 胜率>70%）\n// 最强王者 （PK=10次 且 胜率>90%）\n// 次数和胜率都可以根据情况作出改变\nconst getPw = function (cs ,sl) {\n    if(cs <= 2) return 'Perunggu Stubborn';  // '倔强青铜';\n    if(cs <= 4 && sl>=40) return 'Silver Rangka';// '秩序白银';\n    if(cs <= 6 && sl>=50) return 'Glory Emas';// '荣耀黄金';\n    if(cs <= 8 && sl>=60) return 'Premier Platinum';// '尊贵铂金';\n    if(cs <= 10 && sl>=70) return 'Berlian Keabadian';// '永恒钻石';\n    if(cs <= 10 && sl>=90) return 'Raja Terkuat';// '最强王者';\n};\n\nconst getRandom = function(min ,max){\n    return parseInt(Math.random()*(max-min+1)+min,10);\n}\n\nconst getFixed = function (v){\n    let fixNum = new Number(v+1).toFixed(2);//四舍五入之前加1  \n    return new Number(fixNum - 1).toFixed(2);\n}\n\n\nexport default class extends Base {\n\n    // 获取获奖名单\n    // TODO : 增加memcache缓存\n    async prizelistAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n\n\n\n        const localData = cache.get('prize-list');\n        if(localData && localData.length > 0){\n            return this.success(localData);\n        }\n\n        let model_film_prize = this.model('film_prize' ,db);\n        const currentDateTime = moment().add(7,'h').format('YYYY-MM-DD');\n        let userList = await model_film_prize\n                                .alias('base')\n                                .field('times cs,winning sl,total_times zys,prize_name jp,u.name xm ,u.phone sj')\n                                .join('film_user u on  base.user_id=u.id')\n                                .order('base.id desc').where(`base.prize_datetime>\"${currentDateTime} 00:00:00\" and base.prize_datetime<=\"${currentDateTime} 23:59:59\"`)\n                                .select();\n        \n        if(userList.length <= 0){\n            // ['Ahmad', 'Levina', 'Christina', 'Natasha', 'Lidya', 'Johan', 'Rangga', 'Dimas', 'Randy', 'Jason'];\n            return this.success([]);\n        }else{\n            let _phone = null;\n            userList.map((k) => {\n                _phone = k.sj;\n                k.sj = _phone && _phone.substring(0,3)+' *** '+_phone.substring(_phone.length-2);\n            })\n        }\n\n        cache.set('prize-list' ,userList);\n        return this.success(userList);\n    }\n    // 获取排名信息\n    async pmlistAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n\n        const currentDate = moment().add(7, 'h').format('MMDD');\n        const currentHH = moment().add(7, 'h').format('HH');\n        if(currentDate == '0824' && currentHH <= 20){\n            return this.success([\n                {cs:10 ,sl:100 ,zys:59 ,xm:'Jason' ,sj:'782 *** 559'},\n                {cs:10 ,sl:100 ,zys:60 ,xm:'Levina' ,sj:'991 *** 574'},\n                {cs:10 ,sl:100 ,zys:60.3 ,xm:'Natasha' ,sj:'079 *** 670'},\n                {cs:10 ,sl:90 ,zys:62 ,xm:'Johan' ,sj:'319 *** 824'},\n                {cs:10 ,sl:90 ,zys:65 ,xm:'Rangga' ,sj:'021 *** 312'},\n            ])\n        }\n        // select b.* from film_standing b \n        // left join film_user u on u.id = b.user_id \n        // order by b.times desc,b.win desc ,b.total_time \n        // where date='0824';\n\n        const localData = cache.get('standing-pm-'+currentDate);\n        if(localData && localData.length > 0){\n            return this.success(localData);\n        }\n        let model_film_standing = this.model('film_standing' ,db);\n        let userList = await model_film_standing.field('b.times cs,b.total_time zys,b.winning sl,u.`name` mz,u.phone sj')\n                        .alias('b').join('film_user u on u.id = b.user_id ').order('b.times desc,b.win desc ,b.total_time ').limit(0,20).where(`b.date='${currentDate}' and b.times<=10`).select();\n        if(userList.length <= 4){\n            // ['Ahmad', 'Levina', 'Christina', 'Natasha', 'Lidya', 'Johan', 'Rangga', 'Dimas', 'Randy', 'Jason'];\n            userList = [\n                {cs:10 ,sl:100 ,zys:59 ,xm:'Jason' ,sj:'782 *** 559'},\n                {cs:10 ,sl:100 ,zys:60 ,xm:'Levina' ,sj:'991 *** 574'},\n                {cs:10 ,sl:100 ,zys:60.3 ,xm:'Natasha' ,sj:'079 *** 670'},\n                {cs:10 ,sl:90 ,zys:62 ,xm:'Johan' ,sj:'319 *** 824'},\n                {cs:10 ,sl:90 ,zys:65 ,xm:'Rangga' ,sj:'021 *** 312'},\n            ];\n        }else{\n            let _phone = null;\n            userList.map((k) => {\n                _phone = k.sj;\n                k.sj = _phone && _phone.substring(0,3)+' *** '+_phone.substring(_phone.length-2);\n            });\n        }\n\n        cache.set('standing-pm-'+currentDate ,userList);\n        return this.success(userList);\n\n    }\n\n    // 获取我的信息\n    // TODO : 对用户信息增加7天的缓存 \n    async myinfoAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { ud ,uid } = this.get();\n        if(!ud && !uid) return this.fail(-1,'参数错误！');\n\n        // 先获取用户信息\n        let model_film_user = this.model('film_user' ,db);\n        let user = await model_film_user.where(`k='${ud}' or id='${uid}'`).field('id,name mz,avatar tx,phone sj,address dz,isupd upd').select();\n        if(user.length<=0) {\n            const avatar_img = 'http://event.baca.co.id/res/a/'+avatarArr[getRandom(0,avatarArr.length-1)];\n            let user_id = await model_film_user.add({\n                k : ud, \n                name : '-', \n                avatar : avatar_img, \n                phone : '-', \n                address : '-',\n                isupd : 0,\n            });\n            return this.success({\n                id : user_id ,\n                tx : avatar_img ,\n                upd : 0,\n                sj : '-',\n                mz : '-'\n            })\n        }\n        user = user[0];\n        return this.success(user);\n    }\n\n    // 获取我的战绩\n    // TODO : 对用户信息增加7天的缓存 \n    async mystandingAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { uid } = this.get();\n        if(!uid) return this.fail(-1,'参数错误！');\n\n        // 获取战绩信息\n        const currentDate = moment().add(7, 'h').format('MMDD');\n        let model_film_standing = this.model('film_standing' ,db);\n        let record = await model_film_standing\n                .field('times cs,total_time zys,winning sl,win scs')\n                .where(`user_id=${uid} and date='${currentDate}'`)\n                .select();\n        if(record.length <= 0) return this.success({cs:0,sl:0,pw:getPw(0,0),pm:'99+'});\n        record = record[0];\n        // 获取排名\n        const sql = `select b.i from (select (@i:=@i+1) as i,b.user_id from film_standing b,(select @i:=0) as it  where b.date='${currentDate}' and b.times<= 10 order by b.times desc ,b.win desc,b.total_time) b where b.user_id=${uid};`\n        let pmInfo = await model_film_standing.query(sql);\n        if(pmInfo.length > 0){\n            pmInfo = pmInfo[0];\n            record.pm = pmInfo.i+1;\n        }\n        record.pw = getPw(record.cs ,record.sl);\n\n        return this.success(record);\n    }\n\n    // 获取我的PK记录\n    // TODO : 对交战记录增加缓存\n    async myrecordAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { uid } = this.get();\n        if(!uid) return this.fail(-1,'参数错误！');\n\n        const localData = cache.get('ud-record-'+uid);\n        if(localData && localData.length > 0){\n            return this.success(localData);\n        }\n\n        let model_film_record = this.model('film_record' ,db);\n        const currentDate = moment().add(7,'h').format('YYYY-MM-DD');\n        let recordList = await model_film_record.field('create_user_name cnm ,create_user_avatar cav ,opponent_user_name onm ,opponent_user_avatar oav ,total_time zys ,res jg ,addtime tm').where(`create_user_id=${uid} and addtime<='${currentDate} 23:59:59' and addtime>='${currentDate} 00:00:00' `).select();\n        if(recordList.length <= 0) return this.success([]);\n        cache.set('ud-record-'+uid ,recordList);\n        return this.success(recordList);\n    }\n\n    // 得到已经使用的题库的序号\n    async gettikunotAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { uid } = this.get();\n        if(!uid) return this.success({'_1':1,'_2':2,'_3':3,'_4':4,'_5':5,'_6':6,'_7':7,'_8':8,'_9':9,'_10':10});\n        // 先匹配已经玩过的题库，之后从没玩过的里头随机挑选一个用户\n        let model_film_record = this.model('film_record' ,db);\n        const currentDate = moment().add(7,'h').format('YYYY-MM-DD');\n        let tiku_ids = await model_film_record.field('tiku_id').where(`create_user_id=${uid} and addtime<='${currentDate} 23:59:59' and addtime>='${currentDate} 00:00:00' `).select();\n        let otherObjs = {'_1':1,'_2':2,'_3':3,'_4':4,'_5':5,'_6':6,'_7':7,'_8':8,'_9':9,'_10':10};\n        if(tiku_ids.length > 0){\n            tiku_ids.map(({tiku_id}) => delete otherObjs['_'+tiku_id]);\n        } \n        return this.success(otherObjs);\n    }\n\n    // 得到一个题库\n    async gettikuAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow) return this.fail(-1 ,'not allow'); \n        const { uid,tk:currentTikuId } = this.get();\n        if(!uid || !currentTikuId) return this.fail(-1,'参数错误！');\n        const currentDate = moment().add(7,'h').format('YYYY-MM-DD');\n        let model_film_record = this.model('film_record' ,db);\n        // 获取题库的内容\n        let model_film_tiku = this.model('film_tiku' ,db);\n        let tiku_info = await model_film_tiku.field('no tk_id,question_json').where(`date='${moment().add(7, 'h').format('MMDD')}' and no=${currentTikuId}`).select();\n        if(tiku_info.length <= 0) return this.fail(-1,'匹配出错！');\n        tiku_info = tiku_info[0];\n        try{\n            const question = JSON.parse(tiku_info.question_json);\n            tiku_info.question_json = question;\n        }catch(e){\n            // 得到一个默认的题库\n            return this.fail(-1,'获取问题出错！');\n        }\n        let order = [];\n        // 根据随机数进行排序\n        if(parseInt(Math.random()*10) > 5) order.push('id desc');\n        if(parseInt(Math.random()*10) < 7) order.push('total_time desc');\n        if(parseInt(Math.random()*10) > 5) order.push('record_json desc');\n        if(parseInt(Math.random()*10) > 5) order.push('res desc');\n        if(parseInt(Math.random()*10) > 5) order.push('create_user_id desc');\n        if(parseInt(Math.random()*10) > 5) order.push('opponent_user_id desc');\n\n\n        // 根据剩余的题库中，随意选一个对手\n        let opponent =  await model_film_record.field('create_user_id oid ,create_user_name onm,create_user_avatar oav,record_json jg,total_time zys')\n                                .where(`create_user_id!=${uid} and tiku_id=${currentTikuId} and addtime<='${currentDate} 23:59:59' and addtime>='${currentDate} 00:00:00'`)\n                                .order(order.join(',')).select();\n        if(opponent.length <= 5){\n            // 随机生成一个对手\n            opponent = {\n                oid : getRandom(1,20),\n                onm : nameArr[getRandom(0,nameArr.length-1)],\n                oav : 'http://event.baca.co.id/res/a/' + (avatarArr[getRandom(0,avatarArr.length -1)]),\n                jg : tempResultArr[getRandom(0,tempResultArr.length-1)],\n                zys : getRandom(6,25)+'.'+getRandom(1,9),\n            }\n        }else{\n            opponent = opponent[0];\n            opponent.jg = JSON.parse(opponent.jg);\n        }\n        return this.success({\n            tiku_info,opponent\n        });\n    }\n\n    // 提交一个PK战绩\n    async pstadingAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        const { \n            tk:currentTikuId ,  // 题库ID\n            cid:create_id ,     // 提交者的用户ID\n            cnm:create_name ,   // 提交者的姓名\n            cvt:create_avatar , // 提交者的头像\n\n            aid:opponent_id ,   // 对手的id\n            anm:opponent_name , // 对手的姓名\n            avt:opponent_avatar, // 对手的头像\n\n            zys:total_time ,    // 总用时\n            jgjson:record_json, // 结果JSON\n            jg:res ,            // 结果：胜负\n        } = this.post();\n\n\n        if(!currentTikuId||!create_id||!create_name||!create_avatar||!opponent_id||!opponent_name||!opponent_avatar||!total_time||!record_json||!res) return this.fail(-1,'参数错误！');\n\n        const currentDate = moment().add(7, 'h').format('MMDD');\n\n        let model_film_record = this.model('film_record' ,db);\n        let model_film_standing = this.model('film_standing' ,db);\n        // 向记录表中插入一条记录\n        const record_id = await model_film_record.add({\n            tiku_id : currentTikuId, // 题库ID\n            create_user_id : create_id, // 发起用户ID\n            create_user_name : create_name, // 发起用户姓名\n            create_user_avatar : create_avatar, // 发起用户头像\n            opponent_user_id : opponent_id, // PK的用户ID\n            opponent_user_name : opponent_name, // PK的用户姓名\n            opponent_user_avatar : opponent_avatar, // PK的用户头像\n            total_time : total_time, // 总用时\n            record_json : record_json, // 战绩JSON串 : [对，错，对，对，错，错]\n            res : res, // 结果：胜负\n        });\n\n        // 向战绩表中插入修改一条记录\n        let oldStanding = await model_film_standing.where(`user_id=${create_id} and date='${currentDate}'`).select();\n        if(oldStanding.length <= 0){\n            // 先判断是否存在，如果不存在则增加\n            await model_film_standing.add({\n                user_id : create_id , // 用户ID\n                times : '1' , // 参与次数\n                total_time : total_time , // 累计用时\n                winning : (res=='1'?'100':'0') , // 胜率\n                date : currentDate ,// 所属日期\n            });\n        }else{\n            // 有的话，拿出过去的，然后修改其值\n            oldStanding = oldStanding[0];\n            console.log('oldStanding',oldStanding);\n            let win_times = oldStanding.win + (res=='1'?1:0);\n            let total_times = ( parseInt(oldStanding.times)+1 );\n            await model_film_standing.where(`id=${oldStanding.id}`).update({\n                times : total_times,\n                total_time : ( parseFloat(oldStanding.total_time)+parseFloat(total_time) ),\n                winning : getFixed(parseFloat(win_times/total_times))*100,\n                win : win_times\n            });\n        }\n        cache.del('ud-record-'+create_id);\n        return this.success('提交成功！');\n    }\n\n    // 提交一个用户信息\n    async pinfoAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        let { \n            uid:user_id ,   // 用户ID\n            ud:udKey ,      // 用户的KEY\n            nm:name ,       // 姓名\n            av:avatar ,       // 头像\n            ph:phone ,      // 手机号\n            ad:address ,    // 地址\n            d:pupd\n        } = this.post();\n        if(!name||!phone||!address) return this.fail(-1,'参数错误！');\n        if(!user_id){\n            if(!udKey || !avatar) return this.fail(-1,'参数错误！');\n        }\n        let model_film_user = this.model('film_user' ,db);\n        if(user_id){\n            const updParam = {\n                name : name,\n                phone : phone, \n                address : address,\n                isupd : 1,\n            };\n            if(pupd == '-1' || pupd == -1){\n                updParam['isupd'] = 0;\n            }\n            let upds = await model_film_user.where(`id=${user_id} and isupd=0`).update(updParam);\n            if(upds == 0) return this.fail(-1, '不能再次修改了！');\n        }else{\n           user_id = await model_film_user.add({\n                k : udKey, \n                name : name, \n                avatar : avatar, \n                phone : phone, \n                address : address, \n                isupd : 0,\n            });\n        }\n        cache.del('ud-info-'+user_id);\n        return this.success({\n            id : user_id ,\n            msg : '提交成功'\n        });\n    }\n\n    // 修改用户头像\n    async pavatarAction(){\n        return this.fail(-1 ,'not allow'); \n        if(!this.allow || this.method!='post') return this.fail(-1 ,'not allow');\n        let {uid:user_id , av:avatar } = this.post();\n        if(!user_id||!avatar) return this.fail(-1,'参数错误！');\n        let model_film_user = this.model('film_user' ,db);\n        let upds = await model_film_user.where(`id=${user_id}`).update({avatar : avatar });\n        if(upds != 1) return this.fail(-1, '修改失败！');\n        cache.del('ud-info-'+user_id);\n        return this.success('提交成功！');\n    }\n\n\n\n\n\n\n}   "]}