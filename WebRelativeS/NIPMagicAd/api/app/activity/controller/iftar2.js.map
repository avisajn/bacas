{"version":3,"sources":["../../../src/activity/controller/iftar2.js"],"names":["db","activity","saveAction","fail","model","add","no","param","userid","name","phone","count","time","field","where","select","nums","precent","total","console","log","parseFloat","success","getAction","res","xlsAction","data","fileName","_http","http","header","encodeURIComponent","content","splice","write","join"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,KAAK,aAAGC,QAAd;;;;;;;;;;qBAIUC,U;;;;;;;6DACK,KAAKC,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAYHC,iC,GAAQ,KAAKA,KAAL,CAAW,aAAX,EAA0BJ,EAA1B,C;;mCACNI,MAAMC,GAAN,CAAU;AACZC,oCAAKC,MAAMD,EAAN,IAAYC,MAAMC,MADX,EAC0B;AACtCA,wCAASD,MAAMC,MAFH;AAGZC,sCAAOF,MAAME,IAHD,EAGY;AACxBC,uCAAQH,MAAMG,KAJF;AAKZC,uCAAQA,KALI;AAMZC,sCAAOA;AANK,6BAAV,C;;;;mCAUWR,MAAMS,KAAN,CAAY,gBAAZ,EAA8BC,KAA9B,CAAoC,aAAWF,IAA/C,EAAqDG,MAArD,E;;;AAAbC,gC;;AACJA,mCAAOA,KAAK,CAAL,EAAQL,KAAf;AACIM,mC,GAAU,C;;kCAEXD,QAAQ,C;;;;;AACP,gCAAGJ,QAAQ,CAAX,EAAcK,UAAU,IAAV,CAAd,KACK,IAAGL,QAAQ,EAAX,EAAeK,UAAU,EAAV,CAAf,KACA,IAAGL,QAAQ,EAAX,EAAeK,UAAU,EAAV,CAAf,KACA,IAAGL,QAAQ,EAAX,EAAeK,UAAU,EAAV,CAAf,KACA,IAAGL,QAAQ,GAAX,EAAgBK,UAAU,EAAV,CAAhB,KACAA,UAAU,EAAV;;;;;;;mCAGab,MAAMS,KAAN,CAAY,gBAAZ,EAA8BE,MAA9B,E;;;AAAdG,iC;;AACJA,oCAAQA,MAAM,CAAN,EAASP,KAAjB;AACAQ,oCAAQC,GAAR,CAAYJ,IAAZ,EAAkBE,KAAlB;AACAD,sCAAUI,WAAWL,OAAKE,KAAhB,CAAV;AACA,gCAAGD,WAAW,CAAd,EAAgB;AACZA,0CAAU,MAAV;AACH;AACDA,sCAAUA,UAAU,GAApB;;;6DAKG,KAAKK,OAAL,CAAa;AAChBL,yCAAUA,UAAQ;AADF,6BAAb,C;;;;;;;;;;;;;;;;;qBAMLM,S;;;;;;;8DACK,KAAKpB,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAEHqB,+B;8DACG,KAAKF,OAAL,CAAaE,GAAb,C;;;;;;;;;;;;;;;;;qBAGLC,S;;;;;;;;8DACK,KAAKtB,IAAL,CAAU,CAAC,CAAX,EAAc,WAAd,C;;;AAEHuB,gC;AAGEC,oC,GAAU,U;AACVC,iC,GAAQ,KAAKC,I;;AACnBD,kCAAME,MAAN,CAAa,cAAb,EAA6B,0BAA7B;AACAF,kCAAME,MAAN,CAAa,qBAAb,EAAoC,yBAAuBC,mBAAmBJ,QAAnB,CAA3D;AACAC,kCAAME,MAAN,CAAa,QAAb,EAAuB,UAAvB;AACAF,kCAAME,MAAN,CAAa,SAAb,EAAwB,CAAxB;;AAEME,mC,GAAU,E;;;AAEhBN,iCAAKO,MAAL,CAAY,CAAZ,EAAc,CAAd;;AAEA;AACA;AACA;AACI;AACJ;AACA;AACAL,kCAAMM,KAAN,CAAYR,KAAKS,IAAL,CAAU,IAAV,CAAZ;AACA","file":"iftar2.js","sourcesContent":["'use strict';\nimport azure from 'azure-storage';\nimport moment from 'moment';\nimport Base from './base.js';\nimport DB from '../../db.js';\nimport fs from 'fs';\n\nconst db = DB.activity;\n\nexport default class extends Base {\n\n    async saveAction(){\n        return this.fail(-1 ,'not allow'); \n\n        let param = this.post();\n\n        const count = param.count ;\n        const time = param.time ;\n\n\n        if(!param.userid || !param.name || !param.phone || !count || !time){\n            return this.fail('参数错误！');\n        }\n\n        let model = this.model('iftar2_user' ,db);\n        await model.add({\n            no : param.no || param.userid,        // 用户编号\n            userid : param.userid,    \n            name : param.name,      // 用户名\n            phone : param.phone,\n            count : count,\n            time : time,\n        });\n        \n        // 然后根据次数和时间获取百分比\n        let nums = await model.field('count(1) count').where('time >= '+time).select();\n        nums = nums[0].count;\n        let precent = 0;\n        \n        if(nums <= 1){\n            if(time <= 7) precent = 99.9;\n            else if(time <= 20) precent = 85;\n            else if(time <= 45) precent = 67;\n            else if(time <= 80) precent = 56;\n            else if(time <= 130) precent = 45;\n            else precent = 25;\n\n        }else{\n            let total = await model.field('count(1) count').select();\n            total = total[0].count;\n            console.log(nums ,total);\n            precent = parseFloat(nums/total);\n            if(precent == 1){\n                precent = 0.9999;\n            }\n            precent = precent * 100;\n        }\n\n\n\n        return this.success({\n            precent : precent+'%'\n        });\n    }\n\n\n    async getAction(){\n        return this.fail(-1 ,'not allow'); \n        let model = this.model('iftar2_user' ,db);\n        let res = await model.field('group_concat(no) no, name,phone,sum(count) count,min(time) min_time,sum(time) sum_time').group('name,phone').order('count desc').select();\n        return this.success(res);\n    }\n\n    async xlsAction(){\n        return this.fail(-1 ,'not allow'); \n        const model = this.model('iftar2_user' ,db);\n        let data = await model.field('group_concat(no) no, name,phone,sum(count) count,min(time) min_time,sum(time) sum_time').group('name,phone').order('count desc').select();\n        \n\n        const fileName= \"data.xls\";\n        const _http = this.http;\n        _http.header('Content-Type', 'application/vnd.ms-execl');\n        _http.header('Content-Disposition', \"attachment;filename=\"+encodeURIComponent(fileName));\n        _http.header('Pragma', 'no-cache');\n        _http.header('Expires', 0);\n\n        const content = [];\n\n        data.splice(0,0,`编号总和\\t姓名\\t手机号\\t尝试次数\\t最短用时\\t总用时`);\n\n        // data.map((k ,i) => {\n        //     k.sex = k.sex == '1' ? 'male' : 'female';\n        //     k.card = k.card == '1' ? 'yes' : 'no';\n            // if(i == 0){ content.push(`email\\tname\\tbirthdate\\tphone\\tcard\\tcity\\tsex`); }\n        //     // content.push(`${k.email}\\t${k.name}\\t${k.birthdate}\\t${k.phone}\\t${k.card}\\t${k.city}\\t${k.sex}`);\n        // })\n        _http.write(data.join('\\n'));\n        // this.json(data);\n    }\n\n}   "]}